// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject1
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Open Help flip through screens
        /// </summary>
        public void Help()
        {
            #region Variable Declarations
            WinButton uIHelpButton = this.UICloud9MainMenuWindow.UIHelpWindow.UIHelpButton;
            WinButton uINextButton = this.UIUserManualWindow.UINextWindow.UINextButton;
            WinButton uIBackButton = this.UIUserManualWindow.UIBackWindow.UIBackButton;
            #endregion

            // Click 'Help' button
            Mouse.Click(uIHelpButton, new Point(60, 21));

            // Click 'Next' button
            Mouse.Click(uINextButton, new Point(38, 22));

            // Click 'Next' button
            Mouse.Click(uINextButton, new Point(36, 22));

            // Click 'Back' button
            Mouse.Click(uIBackButton, new Point(35, 26));

            // Click 'Back' button
            Mouse.Click(uIBackButton, new Point(35, 26));
        }
        
        /// <summary>
        /// Open Player Stats
        /// </summary>
        public void PlayerStats()
        {
            #region Variable Declarations
            WinButton uIPlayerStatsButton = this.UICloud9MainMenuWindow.UIPlayerStatsWindow.UIPlayerStatsButton;
            #endregion

            // Click 'Player Stats' button
            Mouse.Click(uIPlayerStatsButton, new Point(77, 13));
        }
        
        #region Properties
        public UICloud9MainMenuWindow UICloud9MainMenuWindow
        {
            get
            {
                if ((this.mUICloud9MainMenuWindow == null))
                {
                    this.mUICloud9MainMenuWindow = new UICloud9MainMenuWindow();
                }
                return this.mUICloud9MainMenuWindow;
            }
        }
        
        public UIUserManualWindow UIUserManualWindow
        {
            get
            {
                if ((this.mUIUserManualWindow == null))
                {
                    this.mUIUserManualWindow = new UIUserManualWindow();
                }
                return this.mUIUserManualWindow;
            }
        }
        #endregion
        
        #region Fields
        private UICloud9MainMenuWindow mUICloud9MainMenuWindow;
        
        private UIUserManualWindow mUIUserManualWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICloud9MainMenuWindow : WinWindow
    {
        
        public UICloud9MainMenuWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Cloud 9 - Main Menu";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Cloud 9 - Main Menu");
            #endregion
        }
        
        #region Properties
        public UIHelpWindow UIHelpWindow
        {
            get
            {
                if ((this.mUIHelpWindow == null))
                {
                    this.mUIHelpWindow = new UIHelpWindow(this);
                }
                return this.mUIHelpWindow;
            }
        }
        
        public UIPlayerStatsWindow UIPlayerStatsWindow
        {
            get
            {
                if ((this.mUIPlayerStatsWindow == null))
                {
                    this.mUIPlayerStatsWindow = new UIPlayerStatsWindow(this);
                }
                return this.mUIPlayerStatsWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIHelpWindow mUIHelpWindow;
        
        private UIPlayerStatsWindow mUIPlayerStatsWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIHelpWindow : WinWindow
    {
        
        public UIHelpWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button3";
            this.WindowTitles.Add("Cloud 9 - Main Menu");
            #endregion
        }
        
        #region Properties
        public WinButton UIHelpButton
        {
            get
            {
                if ((this.mUIHelpButton == null))
                {
                    this.mUIHelpButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIHelpButton.SearchProperties[WinButton.PropertyNames.Name] = "User Guide and Help Button";
                    this.mUIHelpButton.WindowTitles.Add("Cloud 9 - Main Menu");
                    #endregion
                }
                return this.mUIHelpButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIHelpButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPlayerStatsWindow : WinWindow
    {
        
        public UIPlayerStatsWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button4";
            this.WindowTitles.Add("Cloud 9 - Main Menu");
            #endregion
        }
        
        #region Properties
        public WinButton UIPlayerStatsButton
        {
            get
            {
                if ((this.mUIPlayerStatsButton == null))
                {
                    this.mUIPlayerStatsButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIPlayerStatsButton.SearchProperties[WinButton.PropertyNames.Name] = "Player Stats Button";
                    this.mUIPlayerStatsButton.WindowTitles.Add("Cloud 9 - Main Menu");
                    #endregion
                }
                return this.mUIPlayerStatsButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIPlayerStatsButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIUserManualWindow : WinWindow
    {
        
        public UIUserManualWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "User Manual";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("User Manual");
            #endregion
        }
        
        #region Properties
        public UINextWindow UINextWindow
        {
            get
            {
                if ((this.mUINextWindow == null))
                {
                    this.mUINextWindow = new UINextWindow(this);
                }
                return this.mUINextWindow;
            }
        }
        
        public UIBackWindow UIBackWindow
        {
            get
            {
                if ((this.mUIBackWindow == null))
                {
                    this.mUIBackWindow = new UIBackWindow(this);
                }
                return this.mUIBackWindow;
            }
        }
        #endregion
        
        #region Fields
        private UINextWindow mUINextWindow;
        
        private UIBackWindow mUIBackWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINextWindow : WinWindow
    {
        
        public UINextWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnNext";
            this.WindowTitles.Add("User Manual");
            #endregion
        }
        
        #region Properties
        public WinButton UINextButton
        {
            get
            {
                if ((this.mUINextButton == null))
                {
                    this.mUINextButton = new WinButton(this);
                    #region Search Criteria
                    this.mUINextButton.SearchProperties[WinButton.PropertyNames.Name] = "Next";
                    this.mUINextButton.WindowTitles.Add("User Manual");
                    #endregion
                }
                return this.mUINextButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUINextButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIBackWindow : WinWindow
    {
        
        public UIBackWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnBack";
            this.WindowTitles.Add("User Manual");
            #endregion
        }
        
        #region Properties
        public WinButton UIBackButton
        {
            get
            {
                if ((this.mUIBackButton == null))
                {
                    this.mUIBackButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIBackButton.SearchProperties[WinButton.PropertyNames.Name] = "Back";
                    this.mUIBackButton.WindowTitles.Add("User Manual");
                    #endregion
                }
                return this.mUIBackButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIBackButton;
        #endregion
    }
}
